class Solution {
    public int splitArray(int[] nums,int m){
	    int max=0;
	    long sum=0;
	    for(int num:nums){
		    max=Math.max(max,num);
		    sum+=num;
	    }
	    if(m==1)	return (int)sum;
	    //binary search
	    long l=max,r=sum;
	    while(l<=r){
		    long mid=l+(r-l)/2;
		    if(valid(mid,nums,m)){
			    r=mid-1;	//cannot be divided into more than m subarrays
		    }else l=mid+1;
	    }
	    return (int)l;
    }
    public boolean valid(long target,int[] nums,int m){
	    int count=1;				//number of subarrays
	    int total=0;
	    for(int num:nums){
		    total+=num;
		    if(total>target){		//if no. of subarrays > m
			    total=num;
			    count++;
			    if(count>m)	return false;
		    }	
	    }
	    return true;
    }
}
